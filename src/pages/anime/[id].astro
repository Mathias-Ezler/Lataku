---
// src/pages/anime/[id].astro
import Layout from '../../layouts/Layout.astro';
import { animeData } from '../../data/anime';

// Generar rutas estáticas
export function getStaticPaths() {
  return animeData.map((anime) => ({
    params: { id: anime.id },
    props: { anime },
  }));
}

const { anime } = Astro.props;
---

<Layout title={anime.title}>
  <div class="container mx-auto px-4 py-8">
    <!-- Hero Section -->
    <div class="flex flex-col md:flex-row gap-8 mb-12">
      <!-- Imagen del anime -->
      <div class="w-full md:w-1/3 flex justify-center">
        <img
          src={anime.imageUrl || "/placeholder.svg"}
          alt={`Portada de ${anime.title}`}
          class="w-full max-w-xs rounded-lg shadow-lg"
          loading="lazy"
        />
      </div>

      <!-- Información del anime -->
      <div class="w-full md:w-2/3">
        <h1 class="text-3xl text-white font-bold mb-4">{anime.title}</h1>

        <div class="space-y-6">
          <!-- Estado, tipo y año -->
          <div class="flex flex-wrap gap-2">
            <span class="px-3 py-1 bg-pink-600 text-white rounded-full text-sm">
              {anime.status}
            </span>
            <span class="px-3 py-1 bg-purple-600 text-white rounded-full text-sm">
              {anime.type}
            </span>
            <span class="px-3 py-1 bg-blue-600 text-white rounded-full text-sm">
              {anime.releaseYear}
            </span>
          </div>

          <!-- Descripción -->
          <p class="text-gray-300 leading-relaxed">{anime.description}</p>

          <!-- Detalles adicionales -->
          <div class="grid grid-cols-2 gap-4 text-sm">
            <div>
              <span class="text-gray-400">Estudio:</span>
              <span class="text-white ml-2">{anime.studio}</span>
            </div>
            {anime.episodes && (
              <div>
                <span class="text-gray-400">Episodios:</span>
                <span class="text-white ml-2">{anime.episodes.length}</span>
              </div>
            )}
            <div>
              <span class="text-gray-400">Rating:</span>
              <span class="text-white ml-2">{anime.rating}/5</span>
            </div>
          </div>

          <!-- Categorías -->
          <div class="flex flex-wrap gap-2">
            {anime.categories.map((category) => (
              <span class="px-3 py-1 bg-pink-600 text-white rounded-full text-sm">
                {category}
              </span>
            ))}
          </div>
        </div>
      </div>
    </div>

    <!-- Sección del Trailer -->
    {anime.trailerUrl && (
      <div class="mb-12">
        <h2 class="text-2xl text-white font-bold mb-6 relative pl-4 bg-gray-900 p-2">
          <div class="absolute left-0 top-0 h-full w-1 bg-gradient-to-b from-pink-500 to-purple-500"></div>
          Trailer
        </h2>
        <div class="relative w-full aspect-video">
          <iframe
            src={anime.trailerUrl}
            class="absolute inset-0 w-full h-full rounded-lg shadow-lg"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen
            title={`${anime.title} Trailer`}
          />
        </div>
      </div>
    )}

    <!-- Sección de Episodios -->
{anime.episodes && anime.episodes.length > 0 && (
  <div class="mb-12">
    <!-- Título de la sección -->
    <h2 class="bg-gray-900 p-2 text-2xl text-white font-bold mb-6 relative pl-4">
      <div class="absolute left-0 top-0 h-full w-1 bg-gradient-to-b from-pink-500 to-purple-500"></div>
      Episodios
    </h2>

    <!-- Selector de episodios -->
    <div class="mb-6">
      <select
        id="episodeSelector"
        class="bg-pink-700 border-2 border-purple-500 text-white rounded-lg p-2 w-full md:w-72 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200"
      >
        {anime.episodes.map((episode, index) => (
          <option value={episode.number} selected={index === 0}>
            Selecciona el: {episode.title}
          </option>
        ))}
      </select>
    </div>

    <!-- Contenedor del video -->
    <div id="videoContainer" class="relative w-full aspect-video bg-gray-800 rounded-lg overflow-hidden shadow-2xl">
      <iframe
        id="episodeVideo"
        src={anime.episodes[0].videoUrl}
        class="absolute inset-0 w-full h-full"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
        allowfullscreen
        title={`${anime.title} - Episodio ${anime.episodes[0].number}`}
      />
    </div>
  </div>
)}
  </div>
</Layout>

<!-- Script para manejar el cambio de episodios -->
<script define:vars={{ episodes: anime.episodes }}>
  const episodeSelector = document.getElementById('episodeSelector');
  const episodeVideo = document.getElementById('episodeVideo');

  if (episodeSelector && episodeVideo) {
    episodeSelector.addEventListener('change', (event) => {
      const selectedEpisodeNumber = parseInt(event.target.value);
      const selectedEpisode = episodes.find((ep) => ep.number === selectedEpisodeNumber);

      if (selectedEpisode) {
        episodeVideo.src = selectedEpisode.videoUrl;
      }
    });
  }
</script>